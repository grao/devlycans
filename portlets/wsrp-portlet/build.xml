<?xml version="1.0"?>
<!DOCTYPE project>

<project name="wsrp-portlet" basedir="." default="deploy">
	<import file="../build-common-portlet.xml" />

	<!--
	See http://wiki.oasis-open.org/wsrp/WSRP_Producers for a list of demo
	producers.
	-->

	<target name="build-oasis-wsrp">
		<taskdef classpathref="portal.classpath" resource="axis-tasks.properties" />

		<mkdir dir="docroot/WEB-INF/lib" />

		<copy todir="docroot/WEB-INF/lib">
			<fileset dir="${app.server.lib.portal.dir}" includes="${plugin.jars}" />
		</copy>

		<tstamp>
			<format property="tstamp.value" pattern="yyyyMMddkkmmssSSS" />
		</tstamp>

		<mkdir dir="${tstamp.value}" />

		<axis-wsdl2java nowrapped="true" output="${tstamp.value}" serverside="true" url="docroot/WEB-INF/wsdl/wsrp-1.0-service.wsdl" verbose="true">
			<mapping namespace="urn:oasis:names:tc:wsrp:v1:bind" package="oasis.names.tc.wsrp.v1.bind" />
			<mapping namespace="urn:oasis:names:tc:wsrp:v1:intf" package="oasis.names.tc.wsrp.v1.intf" />
			<mapping namespace="urn:oasis:names:tc:wsrp:v1:types" package="oasis.names.tc.wsrp.v1.types" />
			<mapping namespace="urn:oasis:names:tc:wsrp:v1:wsdl" package="oasis.names.tc.wsrp.v1.wsdl" />
		</axis-wsdl2java>

		<axis-wsdl2java nowrapped="true" output="${tstamp.value}" serverside="true" url="docroot/WEB-INF/wsdl/wsrp-2.0-service.wsdl" verbose="true">
			<mapping namespace="urn:oasis:names:tc:wsrp:v2:bind" package="oasis.names.tc.wsrp.v2.bind" />
			<mapping namespace="urn:oasis:names:tc:wsrp:v2:intf" package="oasis.names.tc.wsrp.v2.intf" />
			<mapping namespace="urn:oasis:names:tc:wsrp:v2:types" package="oasis.names.tc.wsrp.v2.types" />
			<mapping namespace="urn:oasis:names:tc:wsrp:v2:wsdl" package="oasis.names.tc.wsrp.v2.wsdl" />
		</axis-wsdl2java>

		<replaceregexp
			match="super\(\s*errorCode,\s*reason,\s*resourceList,\s*extensions\)"
			replace="super(reason, resourceList, extensions, errorCode)"
		>
			<fileset dir="${tstamp.value}/oasis/names/tc/wsrp/v2/types" includes="FailedPortlets.java,HandleEventsFailed.java,ImportPortletsFailed.java" />
		</replaceregexp>

		<replaceregexp
			match="super\(\s*ccppProfileWarning,\s*useCachedItem,\s*mimeType,\s*itemString,\s*itemBinary,\s*locale,\s*requiresRewriting,\s*cacheControl,\s*clientAttributes,\s*extensions\);"
			replace="super(useCachedItem,mimeType,itemString,itemBinary,locale,requiresRewriting,cacheControl,clientAttributes,extensions,ccppProfileWarning);"
		>
			<fileset dir="${tstamp.value}/oasis/names/tc/wsrp/v2/types" includes="MarkupContext.java,ResourceContext.java" />
		</replaceregexp>
		
		<replace
			dir="${tstamp.value}/oasis/names/tc/wsrp"
			includes="v1/types/LocalizedString.java,v1/types/ResourceValue.java,v1/types/Property.java,v2/types/LocalizedString.java,v2/types/ResourceValue.java,v2/types/Property.java"
			summary="true"
		>
			<replacefilter token="attrField.setXmlName(new javax.xml.namespace.QName(&quot;&quot;, &quot;lang&quot;))" value="attrField.setXmlName(new javax.xml.namespace.QName(&quot;http://www.w3.org/XML/1998/namespace&quot;, &quot;lang&quot;));" />
		</replace>

		<path id="plugin-lib.classpath">
			<fileset dir="docroot/WEB-INF/lib" includes="*.jar" />
			<pathelement location="docroot/WEB-INF/classes" />
		</path>

		<antcall target="compile-java">
			<param name="javac.classpathref" value="plugin.classpath" />
			<param name="javac.destdir" value="${tstamp.value}" />
			<param name="javac.srcdir" value="${tstamp.value}" />
			<reference refid="plugin-lib.classpath" torefid="plugin-lib.classpath" />
		</antcall>

		<jar
			basedir="${tstamp.value}"
			jarfile="docroot/WEB-INF/lib/oasis-wsrp.jar"
		/>

		<delete dir="${tstamp.value}" />
	</target>

	<target name="format-xml">
		<for param="xml.file">
			<path>
				<fileset
					dir="."
					includes="docroot/WEB-INF/wsdl/*"
				/>
			</path>
			<sequential>
				<java
					classname="com.liferay.portal.tools.XMLFormatter"
					classpathref="portal.classpath"
					fork="true"
					newenvironment="true"
				>
					<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
					<jvmarg value="-Dxml.formatter.file=@{xml.file}" />
					<jvmarg value="-Dxml.formatter.strip.comments=true" />
				</java>
			</sequential>
		</for>
	</target>
</project>